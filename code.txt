// Angular 15+ Mini Project: Employee Task Dashboard

// --- app.module.ts ---
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { RouterModule, Routes } from '@angular/router';

import { AppComponent } from './app.component';
import { HeaderComponent } from './components/header.component';
import { EmployeeListComponent } from './components/employee-list.component';
import { EmployeeDetailComponent } from './components/employee-detail.component';
import { AddEmployeeComponent } from './components/add-employee.component';
import { TaskFormComponent } from './components/task-form.component';

const routes: Routes = [
  { path: '', redirectTo: '/employees', pathMatch: 'full' },
  { path: 'employees', component: EmployeeListComponent },
  { path: 'employees/:id', component: EmployeeDetailComponent },
  { path: 'add-employee', component: AddEmployeeComponent },
];

@NgModule({
  declarations: [
    AppComponent,
    HeaderComponent,
    EmployeeListComponent,
    EmployeeDetailComponent,
    AddEmployeeComponent,
    TaskFormComponent,
  ],
  imports: [
    BrowserModule,
    FormsModule,
    ReactiveFormsModule,
    HttpClientModule,
    RouterModule.forRoot(routes)
  ],
  bootstrap: [AppComponent]
})
export class AppModule {}


// --- employee.service.ts ---
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

export interface Employee {
  id: number;
  name: string;
  position: string;
  tasks: string[];
}

@Injectable({ providedIn: 'root' })
export class EmployeeService {
  private apiUrl = 'https://jsonplaceholder.typicode.com/users';

  constructor(private http: HttpClient) {}

  getEmployees(): Observable<Employee[]> {
    return this.http.get<Employee[]>(this.apiUrl);
  }

  getEmployee(id: number): Observable<Employee> {
    return this.http.get<Employee>(`${this.apiUrl}/${id}`);
  }
}


// --- app.component.ts ---
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  template: `
    <app-header></app-header>
    <router-outlet></router-outlet>
  `,
})
export class AppComponent {}


// --- header.component.ts ---
import { Component } from '@angular/core';

@Component({
  selector: 'app-header',
  template: `
    <nav>
      <a routerLink="/employees">Employees</a>
      <a routerLink="/add-employee">Add Employee</a>
    </nav>
  `,
  styles: [`nav { padding: 10px; background: #eee; } nav a { margin-right: 10px; }`]
})
export class HeaderComponent {}


// --- employee-list.component.ts ---
import { Component, OnInit } from '@angular/core';
import { Employee, EmployeeService } from '../services/employee.service';

@Component({
  selector: 'app-employee-list',
  template: `
    <h2>Employee List</h2>
    <ul>
      <li *ngFor="let emp of employees">
        <a [routerLink]="['/employees', emp.id]">{{ emp.name }} - {{ emp.position }}</a>
      </li>
    </ul>
  `
})
export class EmployeeListComponent implements OnInit {
  employees: Employee[] = [];

  constructor(private employeeService: EmployeeService) {}

  ngOnInit() {
    this.employeeService.getEmployees().subscribe(data => this.employees = data);
  }
}


// --- employee-detail.component.ts ---
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Employee, EmployeeService } from '../services/employee.service';

@Component({
  selector: 'app-employee-detail',
  template: `
    <h2>Employee Details</h2>
    <div *ngIf="employee">
      <p><strong>Name:</strong> {{ employee.name }}</p>
      <p><strong>Position:</strong> {{ employee.position }}</p>
      <app-task-form [employee]="employee"></app-task-form>
    </div>
  `
})
export class EmployeeDetailComponent implements OnInit {
  employee!: Employee;

  constructor(private route: ActivatedRoute, private empService: EmployeeService) {}

  ngOnInit() {
    const id = Number(this.route.snapshot.paramMap.get('id'));
    this.empService.getEmployee(id).subscribe(data => this.employee = data);
  }
}


// --- add-employee.component.ts ---
import { Component } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-add-employee',
  template: `
    <h2>Add Employee</h2>
    <form [formGroup]="empForm" (ngSubmit)="onSubmit()">
      <input formControlName="name" placeholder="Name" />
      <input formControlName="position" placeholder="Position" />
      <button type="submit">Add</button>
    </form>
  `
})
export class AddEmployeeComponent {
  empForm: FormGroup;

  constructor(private fb: FormBuilder) {
    this.empForm = this.fb.group({ name: '', position: '' });
  }

  onSubmit() {
    console.log('Form submitted:', this.empForm.value);
  }
}


// --- task-form.component.ts ---
import { Component, Input } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { Employee } from '../services/employee.service';

@Component({
  selector: 'app-task-form',
  template: `
    <h3>Assign Task</h3>
    <form [formGroup]="taskForm" (ngSubmit)="submitTask()">
      <input formControlName="task" placeholder="Enter Task" />
      <button type="submit">Assign</button>
    </form>
  `
})
export class TaskFormComponent {
  @Input() employee!: Employee;
  taskForm: FormGroup;

  constructor(private fb: FormBuilder) {
    this.taskForm = this.fb.group({ task: '' });
  }

  submitTask() {
    const task = this.taskForm.value.task;
    if (task) {
      this.employee.tasks = this.employee.tasks || [];
      this.employee.tasks.push(task);
      this.taskForm.reset();
      console.log(`Task added for ${this.employee.name}: ${task}`);
    }
  }
}
